[project]
name = "faxlab-tools"
version = "0.2.0"
description = "A python library of tools useful for reproducible research, built upon the FacsimiLab philosophy."
readme = "README.md"
authors = [
  { name = "Pranav Kumar Mishra", email = "62562712+pranavmishra90@users.noreply.github.com" },
]
requires-python = ">=3.10"
dependencies = [
    "numpy>=2",
    "pandas>=2.3.0",
]

[project.optional-dependencies]
build = ["uv ~= 0.7.12"]

[dependency-groups]
dev = [
  "datalad>=1.2.1",
  "pre-commit>=4.2.0",
  "pytest>=8.4.2",
  "python-semantic-release>=10.2.0",
  "ruff>=0.12.2",
]

# Lint and Format
#------------------------------------------------------------------------

[tool.ruff]
line-length = 100
indent-width = 2

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true

[tool.ruff.lint]
select = ["E", "F"]
ignore = ["F401", "E402", "E501"]
exclude = [
  "tmp",
  "build",
  "dist",
  ".venv",
  "env",
  "venv",
  ".eggs",
  "*.egg-info",
  ".git",
  ".hg",
  ".mypy_cache",
  ".tox",
  ".nox",
  ".pytest_cache",
  "__pypackages__",
  "docs/conf.py",
]


# Test
#------------------------------------------------------------------------
[tool.pytest.ini_options]
addopts = "-s -v"


# Build
#------------------------------------------------------------------------
[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/faxlab_tools"]


# Version control
#------------------------------------------------------------------------

[tool.semantic_release]

version_toml = [
  "pyproject.toml:project.version",
  "src/faxlab_tools/__version__.py:__version__"
]
assets = []

build_command = """
    uv lock --upgrade-package "$PACKAGE_NAME"
    git add uv.lock
    uv build
"""

commit_message = "ci(semantic-release): automatic update - v{version}"
commit_parser = "conventional"

logging_use_named_masks = false
allow_zero_version = true
major_on_zero = true
no_git_verify = false

tag_format = "v{version}"
upload_to_release = true
template_dir = "./github/templates"

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "Pranav Kumar Mishra <62562712+pranavmishra90@users.noreply.github.com>"

[tool.semantic_release.commit_parser_options]
allowed_tags = [
  "build",
  "chore",
  "ci",
  "docs",
  "feat",
  "fix",
  "perf",
  "style",
  "refactor",
  "test",
]
minor_tags = ["feat"]
patch_tags = ["fix", "perf", "docs", 'ci']
default_bump_level = 0

# [tool.semantic_release.branches.release]
# match = "release"
# prerelease = false

# [tool.semantic_release.branches.rc]
# match = "rc/*"
# prerelease_token = "rc"
# prerelease = true

[tool.semantic_release.branches.main]
match = "main"
prerelease = false

[tool.semantic_release.branches.feat]
match = "feat/*"
prerelease_token = "beta"
prerelease = true

[tool.semantic_release.branches.fix]
match = "fix/*"
prerelease_token = "beta"
prerelease = true

[tool.semantic_release.changelog.default_templates]
changelog_file = "CHANGELOG.md"
output_format = "md"
template_dir = "./github/templates"

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = true
insecure = false
